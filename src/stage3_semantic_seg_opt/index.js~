require('@tensorflow/tfjs-node');

async function processImage(image) {
    const model = await tf.loadModel('file:///Users/pbanavara/dev/tfjs_models/deeplab_web_model/weights_manifest.json');
    const result = await model.predict(image);
    console.log(result);
}

const image = document.getElementById('image');
image.src = imageURL;

const runButton = document.getElementById('run');
runButton.onclick = async () => {
  const model = await modelPromise;
  console.log('model loaded');
  console.time('predict1');
  const result = await model.detect(image);
  console.timeEnd('predict1');


  
  context.drawImage(image, 0, 0);
  context.font = '10px Arial';

  console.log('number of detections: ', result.length);
  for (let i = 0; i < result.length; i++) {
    
      var data = context.getImageData(0, 0, image.width, image.height).data;
      blurPixels(data, result[i].bbox);
      //var retImg = new Image();
      //retImg.src = retData;
      //context.drawImage(retImg, 0, 0);
      context.beginPath();
      context.rect(...result[i].bbox);
      context.lineWidth = 1;
      context.strokeStyle = 'green';
      context.fillStyle = 'green';
      context.stroke();
      context.fillText(
      result[i].score.toFixed(3) + ' ' + result[i].class, result[i].bbox[0],
      result[i].bbox[1] > 10 ? result[i].bbox[1] - 5 : 10);
  }
};


